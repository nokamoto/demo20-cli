name: Go

on:
  push:
    branches: [ master ]
    tags: [ v* ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.15
      uses: actions/setup-go@v2
      with:
        go-version: 1.15
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Make
      run: make
    - name: Diff
      run: git diff --exit-code

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15
    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v2
      with:
        version: v0.143.0
        args: release --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  push:
    name: Push
    needs: release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2
      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Push image to GitHub Container Registry
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          IMAGE_NAME=cli-automated-test
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/demo20-cli/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker build . --file Dockerfile.releasetest --tag $IMAGE_NAME --build-arg version=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  commit:
    name: Commit 
    needs: push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
    - run: |
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        VALUES=cliautomatedtest.tag=${VERSION}
        docker run \
          -e VALUES=${VALUES}\
          -e VALUES_FILE=apps/values.yaml\
          -e GIT_MESSAGE="Update ${VERSION}"\
          -e GH_PAT=${{ secrets.CR_PAT }}\
          ghcr.io/nokamoto/demo20-gitops-plugin:891468607c8cc5fd848cd0766897f0d3157e061c
